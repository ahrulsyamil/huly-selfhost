name: ${DOCKER_NAME}
services:
  cockroach:
    container_name: huly-cockroach
    image: cockroachdb/cockroach:latest-v24.2
    command: start-single-node --accept-sql-without-tls
    environment:
      - COCKROACH_DATABASE=${CR_DATABASE}
      - COCKROACH_USER=${CR_USERNAME}
      - COCKROACH_PASSWORD=${CR_USER_PASSWORD}
    volumes:
      - ${VOLUME_CR_DATA_PATH:-cr_data}:/cockroach/cockroach-data
      - ${VOLUME_CR_CERTS_PATH:-cr_certs}:/cockroach/certs
    restart: unless-stopped
    networks:
      - huly_net

  redpanda:
    container_name: huly-redpanda
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.6
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    volumes:
      - ${VOLUME_REDPANDA_PATH:-redpanda}:/var/lib/redpanda/data
    environment:
      - REDPANDA_SUPERUSER_USERNAME=${REDPANDA_ADMIN_USER}
      - REDPANDA_SUPERUSER_PASSWORD=${REDPANDA_ADMIN_PWD}
    healthcheck:
      test: ["CMD", "rpk", "cluster", "info", "-X", "brokers=redpanda:9092"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - huly_net

  redpanda-console:
    container_name: huly-redpanda-console
    image: docker.redpanda.com/redpandadata/console:latest
    environment:
      - KAFKA_BROKERS=redpanda:9092
      - REDPANDA_ADMIN_API_URL=http://redpanda:9644
      - REDPANDA_ADMIN_API_TLS_ENABLED=false
    depends_on:
      - redpanda
    networks:
      - huly_net
    profiles:
      - optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redpanda-console.rule=Host(`${HOST_ADDRESS}`) && PathPrefix(`/_redpanda`)"
      - "traefik.http.routers.redpanda-console.entrypoints=web"
      - "traefik.http.services.redpanda-console.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.redpanda-strip.stripprefix.prefixes=/_redpanda"
      - "traefik.http.routers.redpanda-console.middlewares=redpanda-strip"

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: huly-minio
    restart: unless-stopped
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: http://localhost:${MINIO_CONSOLE_PORT:-9001}
    command: server /data --console-address ":9001"
    volumes:
      - ${VOLUME_FILES_PATH:-files}:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - huly_net

  elastic:
    container_name: huly-elastic
    image: "elasticsearch:7.14.2"
    command: |
      /bin/sh -c "./bin/elasticsearch-plugin list | grep -q ingest-attachment || yes | ./bin/elasticsearch-plugin install --silent ingest-attachment;
      /usr/local/bin/docker-entrypoint.sh eswrapper"
    volumes:
      - ${VOLUME_ELASTIC_PATH:-elastic}:/usr/share/elasticsearch/data
    environment:
      - ELASTICSEARCH_PORT_NUMBER=9200
      - BITNAMI_DEBUG=true
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:8082,http://localhost:5601
    ports:
      - "${ELASTIC_PORT:-9200}:9200"
      - "${ELASTIC_PORT_HTTP:-9300}:9300"
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    restart: unless-stopped
    networks:
      - huly_net

  kibana:
    container_name: huly-kibana
    image: kibana:7.14.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic:9200
    depends_on:
      - elastic
    networks:
      - huly_net
    profiles:
      - optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kibana.rule=Host(`${HOST_ADDRESS}`) && PathPrefix(`/_kibana`)"
      - "traefik.http.routers.kibana.entrypoints=web"
      - "traefik.http.services.kibana.loadbalancer.server.port=5601"
      - "traefik.http.middlewares.kibana-strip.stripprefix.prefixes=/_kibana"
      - "traefik.http.routers.kibana.middlewares=kibana-strip"

  rekoni:
    container_name: huly-rekoni
    image: hardcoreeng/rekoni-service:${HULY_VERSION}
    environment:
      - SECRET=${SECRET}
    deploy:
      resources:
        limits:
          memory: 500M
    restart: unless-stopped
    networks:
      - huly_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rekoni.rule=Host(`${HOST_ADDRESS}`) && PathPrefix(`/_rekoni`)"
      - "traefik.http.routers.rekoni.entrypoints=web"
      - "traefik.http.services.rekoni.loadbalancer.server.port=4004"
      - "traefik.http.middlewares.rekoni-strip.stripprefix.prefixes=/_rekoni"
      - "traefik.http.routers.rekoni.middlewares=rekoni-strip"

  transactor:
    container_name: huly-transactor
    image: hardcoreeng/transactor:${HULY_VERSION}
    environment:
      - SERVER_PORT=3333
      - SERVER_SECRET=${SECRET}
      - DB_URL=${CR_DB_URL}
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - FRONT_URL=http://localhost:8087
      - ACCOUNTS_URL=http://account:3000
      - FULLTEXT_URL=http://fulltext:4700
      - STATS_URL=http://stats:4900
      - LAST_NAME_FIRST=${LAST_NAME_FIRST:-true}
      - QUEUE_CONFIG=redpanda:9092
      - WEB_PUSH_URL=http://notification:3335
      - MAIL_URL=http://mail:8097
    depends_on:
      cockroach:
        condition: service_started
      redpanda:
        condition: service_healthy
      minio:
        condition: service_healthy
      stats:
        condition: service_started
      notification:
        condition: service_started
      mail:
        condition: service_started
    restart: unless-stopped
    networks:
      - huly_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transactor.rule=Host(`${HOST_ADDRESS}`) && PathPrefix(`/_transactor`)"
      - "traefik.http.routers.transactor.entrypoints=web"
      - "traefik.http.services.transactor.loadbalancer.server.port=3333"
      - "traefik.http.middlewares.transactor-strip.stripprefix.prefixes=/_transactor"
      - "traefik.http.routers.transactor.middlewares=transactor-strip"

  collaborator:
    container_name: huly-collaborator
    image: hardcoreeng/collaborator:${HULY_VERSION}
    environment:
      - COLLABORATOR_PORT=3078
      - SECRET=${SECRET}
      - ACCOUNTS_URL=http://account:3000
      - STATS_URL=http://stats:4900
      - STORAGE_CONFIG=${STORAGE_CONFIG}
    depends_on:
      account:
        condition: service_started
      stats:
        condition: service_started
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - huly_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.collaborator.rule=Host(`${HOST_ADDRESS}`) && PathPrefix(`/_collaborator`)"
      - "traefik.http.routers.collaborator.entrypoints=web"
      - "traefik.http.services.collaborator.loadbalancer.server.port=3078"
      - "traefik.http.middlewares.collaborator-strip.stripprefix.prefixes=/_collaborator"
      - "traefik.http.routers.collaborator.middlewares=collaborator-strip"

  account:
    container_name: huly-account
    image: hardcoreeng/account:${HULY_VERSION}
    environment:
      - SERVER_PORT=3000
      - SERVER_SECRET=${SECRET}
      - DB_URL=${CR_DB_URL}
      - TRANSACTOR_URL=ws://transactor:3333;ws${SECURE:+s}://${HOST_ADDRESS}/_transactor
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - FRONT_URL=http${SECURE:+s}://${HOST_ADDRESS}
      - STATS_URL=http${SECURE:+s}://${HOST_ADDRESS}/stats
      - MODEL_ENABLED=*
      - ACCOUNTS_URL=http${SECURE:+s}://${HOST_ADDRESS}
      - ACCOUNT_PORT=3000
      - QUEUE_CONFIG=redpanda:9092
      - DISABLE_SIGNUP=${DISABLE_SIGNUP:-true}
      - MAIL_URL=http://mail:8097
    depends_on:
      cockroach:
        condition: service_started
      redpanda:
        condition: service_healthy
      minio:
        condition: service_healthy
      mail:
        condition: service_started
    restart: unless-stopped
    networks:
      - huly_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.account.rule=Host(`${HOST_ADDRESS}`) && PathPrefix(`/_accounts`)"
      - "traefik.http.routers.account.entrypoints=web"
      - "traefik.http.services.account.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.account-strip.stripprefix.prefixes=/_accounts"
      - "traefik.http.routers.account.middlewares=account-strip"

  workspace:
    container_name: huly-workspace
    image: hardcoreeng/workspace:${HULY_VERSION}
    environment:
      - SERVER_SECRET=${SECRET}
      - DB_URL=${CR_DB_URL}
      - TRANSACTOR_URL=ws://transactor:3333;ws${SECURE:+s}://${HOST_ADDRESS}/_transactor
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - MODEL_ENABLED=*
      - ACCOUNTS_URL=http://account:3000
      - STATS_URL=http://stats:4900
      - QUEUE_CONFIG=redpanda:9092
      - ACCOUNTS_DB_URL=${CR_DB_URL}
    depends_on:
      cockroach:
        condition: service_started
      redpanda:
        condition: service_healthy
      account:
        condition: service_started
      stats:
        condition: service_started
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - huly_net

  front:
    container_name: huly-front
    image: hardcoreeng/front:${HULY_VERSION}
    environment:
      - SERVER_PORT=8080
      - SERVER_SECRET=${SECRET}
      - LOVE_ENDPOINT=http${SECURE:+s}://${HOST_ADDRESS}/_love
      - ACCOUNTS_URL=http${SECURE:+s}://${HOST_ADDRESS}/_accounts
      - ACCOUNTS_URL_INTERNAL=http://account:3000
      - REKONI_URL=http${SECURE:+s}://${HOST_ADDRESS}/_rekoni
      - CALENDAR_URL=http${SECURE:+s}://${HOST_ADDRESS}/_calendar
      - GMAIL_URL=http${SECURE:+s}://${HOST_ADDRESS}/_gmail
      - TELEGRAM_URL=http${SECURE:+s}://${HOST_ADDRESS}/_telegram
      - STATS_URL=http${SECURE:+s}://${HOST_ADDRESS}/_stats
      - UPLOAD_URL=/files
      - ELASTIC_URL=http://elastic:9200
      - COLLABORATOR_URL=ws${SECURE:+s}://${HOST_ADDRESS}/_collaborator
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - TITLE=${TITLE:-Huly Self Host}
      - DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE:-en}
      - LAST_NAME_FIRST=${LAST_NAME_FIRST:-true}
      - DESKTOP_UPDATES_CHANNEL=${DESKTOP_CHANNEL}
      - DISABLE_SIGNUP=${DISABLE_SIGNUP:-true}
      - PUSH_PUBLIC_KEY=${PUSH_PUBLIC_KEY}
      - PRINT_URL=http${SECURE:+s}://${HOST_ADDRESS}/_print
      - LIVEKIT_WS=${LIVEKIT_HOST}
    depends_on:
      traefik:
        condition: service_started
      account:
        condition: service_started
      elastic:
        condition: service_healthy
      collaborator:
        condition: service_started
      rekoni:
        condition: service_started
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - huly_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`${HOST_ADDRESS}`)"
      - "traefik.http.routers.front.entrypoints=web"
      - "traefik.http.routers.front.priority=1"
      - "traefik.http.services.front.loadbalancer.server.port=8080"

  fulltext:
    container_name: huly-fulltext
    image: hardcoreeng/fulltext:${HULY_VERSION}
    environment:
      - SERVER_SECRET=${SECRET}
      - DB_URL=${CR_DB_URL}
      - FULLTEXT_DB_URL=http://elastic:9200
      - ELASTIC_INDEX_NAME=huly_storage_index
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - REKONI_URL=http://rekoni:4004
      - ACCOUNTS_URL=http://account:3000
      - STATS_URL=http://stats:4900
      - QUEUE_CONFIG=redpanda:9092
    depends_on:
      cockroach:
        condition: service_started
      elastic:
        condition: service_healthy
      redpanda:
        condition: service_healthy
      rekoni:
        condition: service_started
      account:
        condition: service_started
      stats:
        condition: service_started
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - huly_net

  stats:
    container_name: huly-stats
    image: hardcoreeng/stats:${HULY_VERSION}
    environment:
      - PORT=4900
      - SERVER_SECRET=${SECRET}
    restart: unless-stopped
    networks:
      - huly_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stats.rule=Host(`${HOST_ADDRESS}`) && PathPrefix(`/_stats`)"
      - "traefik.http.routers.stats.entrypoints=web"
      - "traefik.http.services.stats.loadbalancer.server.port=4900"
      - "traefik.http.middlewares.stats-strip.stripprefix.prefixes=/_stats"
      - "traefik.http.routers.stats.middlewares=stats-strip"

  notification:
    container_name: huly-notification
    image: hardcoreeng/notification:${HULY_VERSION}
    environment:
      - PORT=3335
      - SOURCE=${SMTP_MAIL_FROM}
      - ACCESS_KEY=none
      - SECRET_KEY=none
      - PUSH_PUBLIC_KEY=${PUSH_PUBLIC_KEY}
      - PUSH_PRIVATE_KEY=${PUSH_PRIVATE_KEY}
    restart: unless-stopped
    networks:
      - huly_net

  mail:
    container_name: huly-mail
    image: hardcoreeng/mail:${HULY_VERSION}
    ports:
      - 8097:8097
    environment:
      - PORT=8097
      - SOURCE=${SMTP_MAIL_FROM}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    restart: unless-stopped
    networks:
      - huly_net

  print:
    image: hardcoreeng/print:${HULY_VERSION}
    container_name: print
    environment:
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - STATS_URL=http://stats:4900
      - SECRET=${SECRET}
      - ACCOUNTS_URL=http://account:3000
    depends_on:
      stats:
        condition: service_started
      account:
        condition: service_started
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - huly_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.print.rule=Host(`${HOST_ADDRESS}`) && PathPrefix(`/_print`)"
      - "traefik.http.routers.print.entrypoints=web"
      - "traefik.http.services.print.loadbalancer.server.port=4005"
      - "traefik.http.middlewares.print-strip.stripprefix.prefixes=/_print"
      - "traefik.http.routers.print.middlewares=print-strip"

  mongodb:
    container_name: huly-mongodb
    image: mongo:7-jammy
    ports:
      - 27017:27017
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb:/data/db
    networks:
      - huly_net

  love:
    image: hardcoreeng/love:${HULY_VERSION}
    container_name: love
    environment:
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - SECRET=${SECRET}
      - ACCOUNTS_URL=http://huly-account:3000
      - DB_URL=${CR_DB_URL}
      - MONGO_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@huly-mongodb:27017
      - MONGO_DB_NAME=love
      - STORAGE_PROVIDER_NAME=minio
      - PORT=8096
      - LIVEKIT_HOST=${LIVEKIT_HOST}
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
    depends_on:
      account:
        condition: service_started
      cockroach:
        condition: service_started
      mongodb:
        condition: service_started
      minio:
        condition: service_healthy
      livekit:
        condition: service_started
    restart: unless-stopped
    networks:
      - huly_net
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.love.rule=Host(`${HOST_ADDRESS}`) && PathPrefix(`/_love`)"
      - "traefik.http.routers.love.entrypoints=web"
      - "traefik.http.services.love.loadbalancer.server.port=8096"
      - "traefik.http.middlewares.love-strip.stripprefix.prefixes=/_love"
      - "traefik.http.routers.love.middlewares=love-strip"

  kvs:
    image: hardcoreeng/hulykvs:${HULY_VERSION}
    container_name: kvs
    environment:
      - HULY_BIND_PORT=8094
      - HULY_DB_CONNECTION=${CR_DB_URL}
      - SECRET=${SECRET}
      - HULY_TOKEN_SECRET=${SECRET}
    depends_on:
      cockroach:
        condition: service_started
    restart: unless-stopped
    networks:
      - huly_net

  calendar:
    container_name: huly-calendar
    image: hardcoreeng/calendar:${HULY_VERSION}
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@huly-mongodb:27017
      - MONGO_DB=%calendar-service
      - KVS_URL=http://kvs:8094
      - Credentials=${GOOGLE_CONSOLE_CREDENTIALS_JSON}
      - WATCH_URL=https://${HOST_ADDRESS}/_calendar/push
      - ACCOUNTS_URL=http://account:3000
      - STATS_URL=http://stats:4900
      - SECRET=${SECRET}
    depends_on:
      mongodb:
        condition: service_started
      kvs:
        condition: service_started
      account:
        condition: service_started
      stats:
        condition: service_started
    restart: unless-stopped
    networks:
      - huly_net
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.calendar.rule=Host(`${HOST_ADDRESS}`) && PathPrefix(`/_calendar`)"
      - "traefik.http.routers.calendar.entrypoints=web"
      - "traefik.http.services.calendar.loadbalancer.server.port=8095"
      - "traefik.http.middlewares.calendar-strip.stripprefix.prefixes=/_calendar"
      - "traefik.http.routers.calendar.middlewares=calendar-strip"

  livekit:
    container_name: huly-livekit
    image: livekit/livekit-server:latest
    command: --config /etc/livekit.yaml
    ports:
      - "7880:7880"
      - "7881:7881"
      - "7882:7882/udp"
    environment:
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
    volumes:
      - ./livekit.yaml:/etc/livekit.yaml
    restart: unless-stopped
    networks:
      - huly_net

volumes:
  # These named volumes are used when custom volume paths are not specified
  # If VOLUME_*_PATH variables are set, these volumes will be ignored
  elastic:
  files:
  cr_data:
  cr_certs:
  redpanda:
  mongodb:

networks:
  huly_net:
